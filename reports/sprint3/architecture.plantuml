@startuml architecture

together b {
	package Serveur.c as Server {
		package UsersProcess {
			package ClientThreads {
				component clientManagement as cx
			}

			artifact connectionParameters as param
			artifact semaphore as sem
			artifact mutex
			param <-- ClientThreads
			param --> sem
			param --> mutex

			note bottom of mutex 
			protection de la liste
			des clients
			end note
			note bottom of sem
			mise en sommeil lorsque
			le nombre de client max
			est atteint
			end note
		}
		package FilesProcess {
			artifact fileConnectionParameters
			package fileThreads {
				component fileManagement
			}
			fileThreads -u-> fileConnectionParameters
		}
	}

	package Client.c as Client {
		together {
			component sendThread as sendThread
			component recvThread as recvThread
		}
	}
	package clientCommands.c as clientCommands {
		component listFiles
		component sendFile
		component recvFile

	}
	package Commandes.c as Commands {
		component help
		component mp
		component sendFile as sf
		component recvFile as rf
		component listFiles as lf
	}
}

interface TCP

TCP <--> Client
Server <-d-> Commands
clientCommands <-u-> Client
TCP <--> Server
@enduml